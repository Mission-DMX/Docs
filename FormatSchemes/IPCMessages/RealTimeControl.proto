syntax = "proto3";

package missiondmx.fish.ipcmessages;

import public "UniverseControl.proto";
import public "DirectMode.proto";
import public "FilterMode.proto";
import public "Console.proto";

option optimize_for = LITE_RUNTIME;

/*
 * This file specifies messages and types used for general control.
 * It also imports the definitions from direct and filter mode.
 */

enum RunMode {
  RM_FILTER = 0; // Goto filter mode if transmitted
  RM_DIRECT = 1; // Goto direct mode if transmitted
  RM_STOP = 2; // Stop the real time server if transmitted
}

// Tell Fish to enter a new run mode
message update_state {
  RunMode new_state = 1;
}

// Will be pushed from Fish to UI after every cycle
message current_state_update {
  RunMode current_state = 1;
  ShowFileApplyState showfile_apply_state = 2;
  int32 current_scene = 3; // Will be -1 if not applicable, -2 if filter mode requested but no show loaded
  int32 last_cycle_time = 4; // Cycle time in ms
  string last_error = 5; // The last error that occured
}

enum LogLevel {
  LL_DEBUG = 0;
  LL_INFO = 1;
  LL_WARNING = 2;
  LL_ERROR = 3;
}

// This message will post log content to the GUI for every issue that is too long to be displayed within the status bar
message long_log_update {
  LogLevel level = 1;
  uint64 time_stamp = 2; // Unix time stamp of event
  string what = 3; // Content of the log entry
}

message state_list {
  message kvs {
    string k = 1;
    string v = 2;
    uint64 scene_id = 3;
  }
  map<string, string> unspecific_states = 1;
  repeated kvs specific_states = 2;
}
